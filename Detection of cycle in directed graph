/*
ArrayList<ArrayList<Integer>> adj: to represent graph containing 'v'
                                    vertices and edges between them
V: represent number of vertices
*/
class DetectCycle
{
    static boolean isCyclic(ArrayList<ArrayList<Integer>> adj, int V)
    {
        // add your code here
        boolean[] v=new boolean[V];
        boolean[] rec=new boolean[V];
        for(int i=0;i<V;i++)
        if(isCyclicUtil(v,rec,i,adj)){
            return true;
        }
        
        return false;
    }
    
    static boolean isCyclicUtil(boolean[] v,boolean[] rec,int a,ArrayList<ArrayList<Integer>> g){
        if(v[a]==false){
            v[a]=true;
            rec[a]=true;
            
            ArrayList<Integer> al=g.get(a);
            for(int h:al){
                if(!v[h] && isCyclicUtil(v,rec,h,g)){
                    return true;
                }else if(rec[h]){
                    return true;
                }
                
            }
        }
            rec[a]=false;
            return false;
        
    }
}
